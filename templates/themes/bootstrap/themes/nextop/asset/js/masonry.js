(function(window,factory){'use strict';if(typeof define=='function'&&define.amd){define(['../layout-mode','masonry/masonry'],factory);}else if(typeof exports=='object'){module.exports=factory(require('../layout-mode'),require('masonry-layout'));}else{factory(window.Isotope.LayoutMode,window.Masonry);}}(window,function factory(LayoutMode,Masonry){'use strict';function extend(a,b){for(var prop in b){a[prop]=b[prop];}
return a;}
var MasonryMode=LayoutMode.create('masonry');var _getElementOffset=MasonryMode.prototype._getElementOffset;var layout=MasonryMode.prototype.layout;var _getMeasurement=MasonryMode.prototype._getMeasurement;extend(MasonryMode.prototype,Masonry.prototype);MasonryMode.prototype._getElementOffset=_getElementOffset;MasonryMode.prototype.layout=layout;MasonryMode.prototype._getMeasurement=_getMeasurement;var measureColumns=MasonryMode.prototype.measureColumns;MasonryMode.prototype.measureColumns=function(){this.items=this.isotope.filteredItems;measureColumns.call(this);};var _manageStamp=MasonryMode.prototype._manageStamp;MasonryMode.prototype._manageStamp=function(){this.options.isOriginLeft=this.isotope.options.isOriginLeft;this.options.isOriginTop=this.isotope.options.isOriginTop;_manageStamp.apply(this,arguments);};return MasonryMode;}));